
var type = [];
var content = [];

var counter = 1;

var select = ["--–ù–µ –≤—ã–±—Ä–∞–Ω–æ--", "–û—Å–Ω–æ–≤–Ω–æ–π —Ç–µ–∫—Å—Ç", "–ü–æ–¥–∑–∞–≥–æ–ª–æ–≤–æ–∫", "üì∑ –ö–∞—Ä—Ç–∏–Ω–∫–∞", "üîó –°—Å—ã–ª–∫–∞", "‚ñé–°–Ω–æ—Å–∫–∞ (—Ü–∏—Ç–∞—Ç–∞)", "üí¨ –ü–æ–¥–ø–∏—Å—å –∫ –∫–∞—Ä—Ç–∏–Ω–∫–µ", "–ú–∏–∫—Ä–æ-–ø–æ–¥–∑–∞–≥–æ–ª–æ–≤–æ–∫"];

var header = document.getElementById("header_input");
var image = document.getElementById("image_input");

var stuff = document.getElementById("creatorContent");
var preRoot = document.getElementById("pre-root");
var root = document.getElementById("root");

var save = document.getElementById("save");

var load = document.getElementById("notLoad");

function doThis() {

  var newImg = document.createElement("img");
  newImg.setAttribute("src", image.value);
  newImg.setAttribute("id", "newImg");
  preRoot.appendChild(newImg);

  var newH1 = document.createElement("h1");
  newH1.innerHTML = header.value;
  newH1.setAttribute("id", "newH1");
  preRoot.appendChild(newH1);

  var today = new Date();
  var dd = String(today.getDate()).padStart(2, '0');
  var mm = String(today.getMonth() + 1).padStart(2, '0');
  var yyyy = today.getFullYear();

  today = dd + '.' + mm + '.' + yyyy;

  var newP = document.createElement("p");
  newP.innerHTML = "–û–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–æ: " + today + " ‚Ä¢ " + "–°–æ–∑–¥–∞–Ω–æ –Ω–∞ ://–ö–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä";
  newP.setAttribute("id", "newP");
  preRoot.appendChild(newP);

  var date = new Date();
  var fullToday = today + ' ' + ((date.getHours() < 10)?'0':'') + date.getHours() +':'+ ((date.getMinutes() < 10)?'0':'') + date.getMinutes() + ':'+ ((date.getSeconds() < 10)?'0':'') + date.getSeconds();

  /*---------------*/

  /*Testing function goes here*/

  /*--------------*/

  for (var i = 0; i < counter; i++) {
    var elem = document.getElementsByClassName("typeN");
  try {

    if (elem[i].value == "üì∑ –ö–∞—Ä—Ç–∏–Ω–∫–∞") {
      type.push("img");
    } else if (elem[i].value == "–ü–æ–¥–∑–∞–≥–æ–ª–æ–≤–æ–∫") {
      type.push("h2")
    } else if (elem[i].value == "–û—Å–Ω–æ–≤–Ω–æ–π —Ç–µ–∫—Å—Ç") {
      type.push("p")
    } else if (elem[i].value == "‚ñé–°–Ω–æ—Å–∫–∞ (—Ü–∏—Ç–∞—Ç–∞)") {
      type.push("blockquote")
    } else if (elem[i].value == "üîó –°—Å—ã–ª–∫–∞") {
      type.push("a")
    } else if (elem[i].value == "üí¨ –ü–æ–¥–ø–∏—Å—å –∫ –∫–∞—Ä—Ç–∏–Ω–∫–µ") {
      type.push("h4");
    } else if (elem[i].value == "–ú–∏–∫—Ä–æ-–ø–æ–¥–∑–∞–≥–æ–ª–æ–≤–æ–∫") {
      type.push("h3");
    } else if (elem[i].value == "--–ù–µ –≤—ã–±—Ä–∞–Ω–æ--") {
      type.push("nope")
    } 
  } catch {

  } 
  }

  for (var i = 0; i < counter; i++) {


   /* if (document.getElementsByClassName("sup")[i].value == "--–ù–µ –≤—ã–±—Ä–∞–Ω–æ--" || document.getElementsByClassName("lol")[i].value == null || document.getElementsByClassName("lol")[i].value == " ") {
    document.getElementsByClassName("lol")[i].remove();
  } */



  if (type[i] == "img") {

    content.push(document.getElementsByClassName("contentN")[i].value);

    if (!content[i]) {
      continue
    }

    var body = document.getElementById("body");
    var brN = document.createElement("br");
    var e = document.createElement(type[i]);
    e.setAttribute("src", content[i]);
    e.setAttribute("class", "createdI");
    root.appendChild(e);
    root.appendChild(brN);

  } else if (type[i] == "a") {

    content.push(document.getElementsByClassName("contentN")[i].value);

    if (!content[i]) {
      continue
    }

    var body = document.getElementById("body");
    var brN = document.createElement("br");
    var pN = document.createElement("h4");
    pN.setAttribute("class", "pN");
    pN.innerHTML = "¬ª ";

    var e = document.createElement(type[i]);
    if (!content[i].includes("http")) {
      e.setAttribute("href", "https://" + content[i].trimStart());
    } else {
      e.setAttribute("href", content[i].trimStart());
    }
    e.innerHTML = content[i] + " ‚Üó";
    e.setAttribute("class", "createdA");

    root.appendChild(pN);
    root.appendChild(e);
    root.appendChild(brN);

  } else if (type[i] == "nope") {

    content.push(" ");
    continue

  } else if (type[i] == "h2") {

    content.push(document.getElementsByClassName("contentN")[i].value);

    if (!content[i]) {
      continue
    }

    var body = document.getElementById("body");
    var brN = document.createElement("br");
    var e = document.createElement(type[i]);
    e.innerHTML = content[i];
    e.setAttribute("class", "createdH");
    root.appendChild(e);
    root.appendChild(brN);

  } else if (type[i] == "p") {

    content.push(document.getElementsByClassName("contentN")[i].value);

    if (!content[i]) {
      continue
    }

    var body = document.getElementById("body");
    var brN = document.createElement("br");
    var e = document.createElement(type[i]);
    e.innerHTML = content[i];
    e.setAttribute("class", "createdP");
    root.appendChild(e);
    root.appendChild(brN);

 } else if (type[i] == "blockquote") {

    content.push(document.getElementsByClassName("contentN")[i].value);

    if (!content[i]) {
      continue
    }

    var body = document.getElementById("body");
    var brN = document.createElement("br");
    var e = document.createElement(type[i]);
    e.innerHTML = content[i];
    e.setAttribute("class", "createdQ");
    root.appendChild(e);
    root.appendChild(brN);

  } else if (type[i] == "h4") {

    content.push(document.getElementsByClassName("contentN")[i].value);

    if (!content[i]) {
      continue
    }

    var body = document.getElementById("body");
    var brN = document.createElement("br");
    var e = document.createElement(type[i]);
    e.innerHTML = content[i];
    e.setAttribute("class", "createdH4");
    root.appendChild(e);
    root.appendChild(brN);

  } else if (type[i] == "h3") {

    content.push(document.getElementsByClassName("contentN")[i].value);

    if (!content[i]) {
      continue
    }

    var body = document.getElementById("body");
    var brN = document.createElement("br");
    var e = document.createElement(type[i]);
    e.innerHTML = content[i];
    e.setAttribute("class", "createdH3");
    root.appendChild(e);
    root.appendChild(brN);

  } 
}

  document.getElementById("addStuff").remove();
  stuff.remove();


  /*-------------*/

  return [today, fullToday, image.value.trim(), header.value.trim(), type, content]

}


/*addStuff() function goes here*/


function addStuff() {
  var newH = document.createElement("h2");
  var newT = document.createElement("textarea");
  var newI = document.createElement("select");
  var newH2 = document.createElement("h2");

  var newBr = document.createElement("br");

  var stuff = document.getElementById("creatorContent");
  var root = document.getElementById("root");

  newH2.setAttribute("class", "newH2");

  newH.setAttribute("class", "newH");
  newH.innerHTML = '<span id="green">:/</span>–°–æ–∑–¥–∞—Ç—å –Ω–æ–≤—ã–π —ç–ª–µ–º–µ–Ω—Ç';

  newT.setAttribute("rows", "3");
  newT.setAttribute("cols", "45");
  newT.setAttribute("class", "contentN"); 

  newI.setAttribute("class", "typeN");
  newI.setAttribute("id", "input");
  newI.setAttribute("oninput", "changeInstructionN()");
  for (var i = 0; i < select.length; i++) {
    var option = document.createElement("option");
    option.value = select[i];
    option.text = select[i];

    if (i == 1) {
      option.setAttribute("id", "opt1");
    } else if (i == 2) {
      option.setAttribute("id", "opt2");
    } else if (i == 3) {
      option.setAttribute("id", "opt3");
    } else if (i == 4) {
      option.setAttribute("id", "opt4");
    } else if (i == 5) {
      option.setAttribute("id", "opt5");
    } else if (i == 6) {
      option.setAttribute("id", "opt6");
    } else if (i == 7) {
      option.setAttribute("id", "opt7")
    }

    newI.appendChild(option);
 }

  stuff.appendChild(newH);
  stuff.appendChild(document.createElement("br"));
  stuff.appendChild(newI);
  stuff.appendChild(document.createElement("br"));
  stuff.appendChild(newT);
  stuff.appendChild(document.createElement("br"));
  stuff.appendChild(newH2);

  counter++;
  return counter

}


function countWord() {
  var words = document.getElementById("header_input").value;
  var count = 0;
  var split = words.split('');
  for (var i = 0; i < split.length; i++) {
  if (split[i] != "") {
    count += 1;
   }
  }
  if (count > 50) {
    document.getElementById("count").innerHTML = '–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–∏–º–≤–æ–ª–æ–≤: ' + count + '<span id="green">/50</span>' + '  <span id="red" title="–ü—Ä–µ–≤—ã—à–µ–Ω –ª–∏–º–∏—Ç —Å–∏–º–≤–æ–ª–æ–≤">‚ö†</span>'

    load.setAttribute("id", "notLoad");
    load.removeAttribute("onclick");
    load.setAttribute("title", "‚ö† –ù–∞–π–¥–µ–Ω—ã –æ—à–∏–±–∫–∏ –≤ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏–∏ –∑–∞–≥–æ–ª–æ–≤–∫–∞ –∏/–∏–ª–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è");

  } else if (!image.value) { 

    load.setAttribute("id", "notLoad");
    load.removeAttribute("onclick");
    load.setAttribute("title", "‚ö† –ù–∞–π–¥–µ–Ω—ã –æ—à–∏–±–∫–∏ –≤ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏–∏ –∑–∞–≥–æ–ª–æ–≤–∫–∞ –∏/–∏–ª–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è");
    document.getElementById("count").innerHTML = '–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–∏–º–≤–æ–ª–æ–≤: ' + count + '<span id="green">/50</span>' + ' <span id="white"> </span>';

  } else if (!words) {

    load.setAttribute("id", "notLoad");
    load.removeAttribute("onclick");
    load.setAttribute("title", "‚ö† –ù–∞–π–¥–µ–Ω—ã –æ—à–∏–±–∫–∏ –≤ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏–∏ –∑–∞–≥–æ–ª–æ–≤–∫–∞ –∏/–∏–ª–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è");
    document.getElementById("count").innerHTML = '–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–∏–º–≤–æ–ª–æ–≤: ' + count + '<span id="green">/50</span>' + ' <span id="white"> </span>';

  } else {
  document.getElementById("count").innerHTML = '–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–∏–º–≤–æ–ª–æ–≤: ' + count + '<span id="green">/50</span>' + ' <span id="white"> </span>';

   load.setAttribute("id", "do");
   load.removeAttribute("title");
   load.setAttribute("onclick", "doThis()")

  }
}


function countImage () {
  if (!image.value) {

    load.setAttribute("id", "notLoad");
    load.removeAttribute("onclick");
    load.setAttribute("title", "‚ö† –ù–∞–π–¥–µ–Ω—ã –æ—à–∏–±–∫–∏ –≤ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏–∏ –∑–∞–≥–æ–ª–æ–≤–∫–∞ –∏/–∏–ª–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è");

  } else if (!header.value) {

    load.setAttribute("id", "notLoad");
    load.removeAttribute("onclick");
    load.setAttribute("title", "‚ö† –ù–∞–π–¥–µ–Ω—ã –æ—à–∏–±–∫–∏ –≤ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏–∏ –∑–∞–≥–æ–ª–æ–≤–∫–∞ –∏/–∏–ª–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è");

  } else {

   load.setAttribute("id", "do");
   load.removeAttribute("title");
   //load.setAttribute("onclick", "doThis()")
   load.setAttribute("onclick", "pushNewAction()");
  }
}


/**/

function displayAlertBox() {

  if (prompt("–û–ø–∏—à–∏—Ç–µ –≤–æ–∑–Ω–∏–∫—à—É—é –ø—Ä–æ–±–ª–µ–º—É")) {
    alert("–°–ø–∞—Å–∏–±–æ, —á—Ç–æ –ø–æ–º–æ–≥–∞–µ—Ç–µ —É–ª—É—á—à–∞—Ç—å —Ä–∞–±–æ—Ç—É –ø—Ä–æ–µ–∫—Ç–∞!");
  } else {
    alert("–°–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ –±—ã–ª–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ.");
  }

}

/**/


function changeInstructionN() {

  var contentN = document.getElementsByClassName("contentN");
  var typeN = document.getElementsByClassName("typeN");
  var h2N = document.getElementsByClassName("newH2");

  for (var i = 0; i < counter; i++) {

    if (typeN[i].value == "–ü–æ–¥–∑–∞–≥–æ–ª–æ–≤–æ–∫") {
      contentN[i].style.color = "#3EFF44";
      contentN[i].style.fontWeight = "bold";
      contentN[i].innerHTML = "";
      contentN[i].style.borderLeft = "none";
      contentN[i].style.paddingLeft = "0px";
      contentN[i].style.fontStyle = "normal";
      contentN[i].style.fontSize = "55px";

      h2N[i].innerHTML = '<span id="green">–í–≤–µ–¥–∏—Ç–µ –ø–æ–¥–∑–∞–≥–æ–ª–æ–≤–æ–∫ –≤ –ø–æ–ª–µ –≤—ã—à–µ</span>';

    } else if (typeN[i].value == "–û—Å–Ω–æ–≤–Ω–æ–π —Ç–µ–∫—Å—Ç") {
      contentN[i].style.color = "black";
      contentN[i].style.fontWeight = "normal";
      contentN[i].innerHTML = "";
      contentN[i].style.borderLeft = "none";
      contentN[i].style.paddingLeft = "0px";
      contentN[i].style.fontStyle = "normal";
      contentN[i].style.fontSize = "45px";

      h2N[i].innerHTML = '<span id="green">–í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç –≤ –ø–æ–ª–µ –≤—ã—à–µ. –ï—Å–ª–∏ –æ–Ω —Å–æ—Å—Ç–æ–∏—Ç –∏–∑ –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö –∞–±–∑–∞—Ü–µ–≤, —Å–æ–∑–¥–∞–π—Ç–µ –Ω–µ—Å–∫–æ–ª—å–∫–æ –Ω–æ–≤—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤ ‚Äî –ø–æ –æ–¥–Ω–æ–º—É –Ω–∞ –∫–∞–∂–¥—ã–π –∞–±–∑–∞—Ü</span>';

    } else if (typeN[i].value == "üì∑ –ö–∞—Ä—Ç–∏–Ω–∫–∞") {
      contentN[i].style.color = "#3EFF44";
      contentN[i].style.fontWeight = "normal";
      contentN[i].innerHTML = "";
      contentN[i].style.borderLeft = "none";
      contentN[i].style.paddingLeft = "0px";
      contentN[i].style.fontStyle = "normal";
      contentN[i].style.fontSize = "45px";

      h2N[i].innerHTML = '<span id="green">–í–≤–µ–¥–∏—Ç–µ –∞–¥—Ä–µ—Å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤ –ø–æ–ª–µ –≤—ã—à–µ</span> (–ö–∞—Ä—Ç–∏–Ω–∫–∞ <span id="green">‚ùØ</span> –ü—Ä–∞–≤–∞—è –∫–Ω–æ–ø–∫–∞ –º—ã—à–∏ <span id="green">‚ùØ</span> –ö–æ–ø–∏—Ä–æ–≤–∞—Ç—å –∞–¥—Ä–µ—Å –∫–∞—Ä—Ç–∏–Ω–∫–∏)';

    } else if (typeN[i].value == "üîó –°—Å—ã–ª–∫–∞") {
      contentN[i].style.color = "black";
      contentN[i].style.fontWeight = "normal";
      contentN[i].innerHTML = "";
      contentN[i].style.borderLeft = "none";
      contentN[i].style.paddingLeft = "0px";
      contentN[i].style.fontStyle = "normal";
      contentN[i].style.fontSize = "45px";

      h2N[i].innerHTML = '<span id="green">–í–≤–µ–¥–∏—Ç–µ –∞–¥—Ä–µ—Å —Å—Å—ã–ª–∫–∏ –≤ –ø–æ–ª–µ –≤—ã—à–µ</span>';

    } else if (typeN[i].value == "‚ñé–°–Ω–æ—Å–∫–∞ (—Ü–∏—Ç–∞—Ç–∞)") {
      contentN[i].style.color = "#454545";
      contentN[i].style.fontWeight = "normal";
      contentN[i].innerHTML = "";
      contentN[i].style.borderLeft = "9px solid #3EFF44";
      contentN[i].style.paddingLeft = "10px";
      contentN[i].style.fontStyle = "italic";
      contentN[i].style.fontSize = "45px";

      h2N[i].innerHTML = '<span id="green">–í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç —Å–Ω–æ—Å–∫–∏ (—Ü–∏—Ç–∞—Ç—ã) –≤ –ø–æ–ª–µ –≤—ã—à–µ</span>';

    } else if (typeN[i].value == "--–ù–µ –≤—ã–±—Ä–∞–Ω–æ--") {
      contentN[i].style.color = "black";
      contentN[i].style.fontWeight = "normal";
      contentN[i].innerHTML = "";
      contentN[i].style.borderLeft = "none";
      contentN[i].style.paddingLeft = "0px";
      contentN[i].style.fontStyle = "normal";
      contentN[i].style.fontSize = "45px";

      h2N[i].innerHTML = '<span id="green">–î–ª—è –Ω–∞—á–∞–ª–∞ –≤—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø –Ω–æ–≤–æ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞</span> <span id="red" title="–ù–µ –≤—ã–±—Ä–∞–Ω —Ç–∏–ø —ç–ª–µ–º–µ–Ω—Ç–∞">‚ö†</span>';

    } else if (typeN[i].value == "üí¨ –ü–æ–¥–ø–∏—Å—å –∫ –∫–∞—Ä—Ç–∏–Ω–∫–µ") {
      contentN[i].style.color = "#454545";
      contentN[i].style.fontWeight = "bold";
      contentN[i].innerHTML = "";
      contentN[i].style.borderLeft = "none";
      contentN[i].style.paddingLeft = "0px";
      contentN[i].style.fontStyle = "italic";
      contentN[i].style.fontSize = "45px";

      h2N[i].innerHTML = '<span id="green">–í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç –ø–æ–¥–ø–∏—Å–∏ –¥–ª—è –∫–∞—Ä—Ç–∏–Ω–∫–∏ –≤ –ø–æ–ª–µ –≤—ã—à–µ</span>';

  } else if (typeN[i].value == "–ú–∏–∫—Ä–æ-–ø–æ–¥–∑–∞–≥–æ–ª–æ–≤–æ–∫") {
      contentN[i].style.color = "black";
      contentN[i].style.fontWeight = "bold";
      contentN[i].innerHTML = "";
      contentN[i].style.borderLeft = "none";
      contentN[i].style.paddingLeft = "0px";
      contentN[i].style.fontStyle = "normal";
      contentN[i].style.fontSize = "50px";

      h2N[i].innerHTML = '<span id="green">–í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç –º–∏–∫—Ä–æ-–ø–æ–¥–∑–∞–≥–æ–ª–æ–≤–∫–∞ –≤ –ø–æ–ª–µ –≤—ã—à–µ</span>';

  }
  }
}



// Fetch API (sending new action to database)

function pushNewAction() {
  var dataArray = doThis();
  dataArray.unshift(prompt("–ö–∞–∫ –í—ã —Ö–æ—Ç–∏—Ç–µ –Ω–∞–∑–≤–∞—Ç—å —ç—Ç—É —Å—Ç–∞—Ç—å—é?", "–ù–æ–≤–∞—è —Å—Ç–∞—Ç—å—è"));

  var action_to_send = {
    title: dataArray[0],
    today: dataArray[1],
    fullToday: dataArray[2],
    image: dataArray[3],
    header: dataArray[4],
    type: dataArray[5],
    content: dataArray[6],
    author_email: localStorage.getItem("logged"),
    pinned: false,
    stats: {
      views: [],
      likes: [],
      comms: [],
      downvotes: [],
      ratio: 0
    },
    add_info: [],
    action_hidden: false
  }

  //alert(JSON.stringify(action_to_send));

  fetch("/api", {
    method: "POST", 
    headers: {
      "Content-Type": "application/json" 
    },
    body: JSON.stringify({
      do: 'create_action',
      prov_data: action_to_send
    }) 
  })

    .then(function(res) {
      return res.json();
    })

    .then(function(res) {
      if (res == "action created successfully") {
        alert("–°—Ç–∞—Ç—å—è —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω–∞");
        document.location.href = "/" + localStorage.getItem("logged");
      } else if (res !== "done") {
        alert("–ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫...");
      }
    });
}
/* 
localStorage.setItem("logged", res.email);

const object_to_send = pushNewAction(title, today, fullToday, image, header, type, content);

fetch("/api", {
    method: "POST", 
    headers: {
      "Content-Type": "application/json" 
    },
    body: JSON.stringify(object_to_send) 
  })

    .then(function(res) {
      return res.json();
    })

    .then(function(res) {
      if (res) {
        alert("–ê–∫–∫–∞—É–Ω—Ç —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω. –¢–µ–ø–µ—Ä—å –≤–æ–π–¥–∏—Ç–µ –≤ —Å–æ–∑–¥–∞–Ω–Ω—ã–π –∞–∫–∫–∞—É–Ω—Ç");
        document.location.reload()
      } else if (res !== true) {
        alert("–ê–∫–∫–∞—É–Ω—Ç —Å —Ç–∞–∫–æ–π –ø–æ—á—Ç–æ–π —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç");
      }
    });
*/